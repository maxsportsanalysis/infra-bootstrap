# dnsmasq.conf for PXE proxy setup
# Router/DHCP server still gives out IPs. dnsmasq only answers PXE boot requests.

# Basic behavior
port=0                          # disable DNS service
log-dhcp                        # basic DHCP logging
log-facility=/var/log/dnsmasq-pxe.log

# Bind only to the PXE-facing interface to avoid interfering with router DHCP
#interface=eth0
#bind-interfaces

# ProxyDHCP: do not allocate IPs, just provide PXE options for the given subnet
# Use the network id (not router IP nor DHCP pool)
dhcp-range=192.168.50.251,proxy
dhcp-no-override

# Advertise PXE boot options for x86 BIOS + UEFI
pxe-service=x86PC, "PXELINUX (BIOS)", undionly
pxe-service=X86-64_EFI, "PXE UEFI iPXE", efi

# Detect UEFI vs BIOS and serve correct bootloader
dhcp-match=set:efi64,option:client-arch,7
dhcp-match=set:efi32,option:client-arch,6
dhcp-match=set:efiarm64,option:client-arch,11

# UEFI x86_64 systems
dhcp-boot=tag:efi64,http://192.168.50.251/ipxe/ipxe.efi

# ARM64 systems (e.g. Raspberry Pi 4 UEFI boot)
dhcp-boot=tag:efiarm64,http://192.168.50.251/ipxe/ipxe.efi

# Once iPXE loads, chain to our HTTP script
dhcp-userclass=set:ipxe,iPXE
dhcp-boot=tag:ipxe,http://192.168.1.10/pxe/boot.ipxe

# Enable TFTP
enable-tftp
tftp-root=/srv/tftpboot