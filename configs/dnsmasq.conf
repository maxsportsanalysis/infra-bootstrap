# ===============================
# dnsmasq.conf – PXE Proxy Setup
# ===============================

# Disable DNS (we're only using DHCP/TFTP)
port=0
log-dhcp
log-facility=/var/log/dnsmasq-pxe.log

# ProxyDHCP mode (router hands out IPs)
dhcp-range=192.168.50.0,proxy,255.255.255.0
dhcp-no-override

# Enable TFTP
enable-tftp
tftp-root=/srv/tftpboot

# ------------------------------
# Client Architecture Detection
# ------------------------------
dhcp-match=set:ipxe,175                  # already running iPXE
dhcp-match=set:bios,option:client-arch,0
#dhcp-match=set:efi32,option:client-arch,6
dhcp-match=set:efi64,option:client-arch,7
#dhcp-match=set:efi64,option:client-arch,9
#dhcp-match=set:efi-arm32,option:client-arch,10
#dhcp-match=set:efi-arm64,option:client-arch,11

# ------------------------------
# PXE Chainloading Rules
# ------------------------------

# BIOS clients (not yet iPXE)
pxe-service=tag:bios,tag:!ipxe,X86PC,"iPXE (BIOS)",ipxe/undionly.kpxe

# UEFI x86_64 clients (not yet iPXE)
pxe-service=tag:efi64,tag:!ipxe,x86-64_EFI,"iPXE (UEFI x64)",ipxe/ipxe.efi

# Clients already running iPXE — send them the script via HTTP
dhcp-boot=tag:ipxe,http://192.168.50.251/ipxe/boot.ipxe

# Optional: Fallback for BIOS iPXE that doesn’t get tag applied
# pxe-service=tag:bios,tag:ipxe,X86PC,"iPXE Boot Script",http://192.168.50.251/pxe/boot.ipxe